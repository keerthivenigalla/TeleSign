Assumptions
1. For the photos count the value is retreived from the photos count present below the videos and photos section
2. Rottentomatoes API use need to be approved by Rottentomatoes, so considered any automation of test scripts 
interacting with Rottentomatoes is out of scope.

Manual Test cases
1. check whether all the links are valid and not broken.
2. Verify value of each imdb_id in json output matches with the last path(prefixed with 'tt') in the respective url.
3. Verify the count value in the Json output matches with the photos count displayed in the IMDB webpage loaded with the respective url.
4. Do step#3 in different browsers(proably different versions) applicable.
5. Cross-check the movie names loaded by urls in json with the in-theater list in rottentomatoes. Make sure the movie count match as well as title's.
6. Verify few attributes of the movie(like actors/production/year) for each in-theater movie in rottentomatoes with the imdb page to make sure 
they are same movies but not just with same names.
7.Check the time the python script takes is below 8 sec
 

Test cases that can be automated
1. check whether all the links are valid and not broken.
2. Verify all the id value in the json output matches from the value in Url.
3. Verify all the count values in the Json output matches from the photos count in the IMDB webpage of the Url.


How to run script?
--------------------
Automation script for step#3 is attached.
Script must be run on the machine running with Firefox 25 as selenium 2.38 was used(did not get much time to make it work with XPath in classic java)
sampleoutput.txt is the output generated by the script.
Run the below command in the command line/terminal
     Syntax: java -jar ProjectTS_Scripts.jar >output.txt



